package tudbut.mod.client.ttcp.mods.exploit;

import java.util.ArrayList;
import java.util.Date;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketKeepAlive;
import net.minecraft.network.status.client.CPacketPing;
import tudbut.mod.client.ttcp.TTCp;
import tudbut.mod.client.ttcp.utils.Module;
import tudbut.mod.client.ttcp.utils.Setting;
import tudbut.mod.client.ttcp.utils.Utils;
import tudbut.mod.client.ttcp.utils.category.Exploit;
import tudbut.obj.Save;

@Exploit
public class Ping
extends Module {
    @Save
    int time = 1;
    ArrayList<Packet<?>> processed = new ArrayList();

    @Override
    public void updateBinds() {
        this.subComponents.clear();
        this.subComponents.add(Setting.createInt(0, 10, "Pings", this, "time"));
    }

    @Override
    public boolean onPacket(Packet<?> packet) {
        if (packet instanceof CPacketPing) {
            Utils.setPrivateField(CPacketPing.class, packet, Utils.getFieldsForType(CPacketPing.class, Long.TYPE)[0], new Date().getTime() - (long)this.time * 1000L);
        }
        if (packet instanceof CPacketKeepAlive && !this.processed.contains(packet)) {
            this.processed.add(packet);
            new Thread(() -> {
                try {
                    Thread.sleep((long)this.time * 1000L);
                }
                catch (Exception exception) {
                    // empty catch block
                }
                TTCp.player.connection.sendPacket(packet);
            }).start();
            return true;
        }
        return false;
    }
}
